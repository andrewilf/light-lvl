{"version":3,"sources":["Components/Controls.js","Components/Light.js","Components/reducers/lightReducer.js","Components/App.js","index.js"],"names":["connect","state","console","log","activeLight","numberOfClicks","props","useEffect","sessionStorage","setItem","JSON","stringify","getItem","lightButtons","controls","map","d","i","onClick","button","dispatch","type","action","name","Controls","styled","div","className","color","Light","lightReducer","intitialState","lightValues","Storage","parse","store","createStore","getState","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.01b23fa5.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\nimport styled from 'styled-components';\nimport { connect, useDispatch } from \"react-redux\"\n\nconst mapStateToProps = (state) => {\n    console.log(state.activeLight)\n    return {\n        numberOfClicks: state.numberOfClicks,\n        activeLight: state.activeLight\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\n}\n\n\n\nfunction Controls(props) {\n    \n   // const dispatchlvl = useDispatch()\n\n    useEffect(() => {\n        sessionStorage.setItem('lightlvl', JSON.stringify({\n            activeLight: props.activeLight,\n            numberOfClicks: props.numberOfClicks\n        }))\n        console.log(props)\n        console.log(sessionStorage.getItem('lightlvl'))\n        console.log('use effect')\n    })\n\n    const handleClick = (button) => {\n        props.dispatch({ type: button.action });\n    };\n\n    const lightButtons = props.controls.map((d, i) => {\n        return (\n            <button key={i} onClick={() => handleClick(d)}>\n                {d.name}\n            </button>\n        );\n    });\n\n    const Controls = styled.div`\n    margin: 20px;\n  `\n\n    return (\n        <div>\n            <Controls>{lightButtons}</Controls>\n            <p>Number of clicks: {props.numberOfClicks}</p>\n            <button className=\"reset\" onClick={() => props.dispatch({ type: 'RESET' })}>\n                Reset\n            </button>\n        </div>\n    );\n}\n\nexport default connect(mapStateToProps)(Controls)\n\n//export default Controls;\n","import React from 'react'\nimport styled from 'styled-components'\nimport { connect } from \"react-redux\"\n\nconst mapStateToProps = (state) => {\n  console.log(state)\n  return {\n      color: state.activeLight.color\n  };\n}\n\nfunction Lights(props) {\n  console.log('Lights - props',props)\n\n  const Light = styled.div`\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    border: '1px solid';\n    color:white;\n    background:${props.color} ;\n  `\n  \n  return (\n   <Light />\n  )\n}\nexport default connect(mapStateToProps)(Lights)\n//export default Lights","const lightReducer = (state, action) => {\n    let intitialState = {\n        lightValues: [\n            { name: 'off', color: 'rgba(0,0,0,1)', action: 'SET_OFF' },\n            { name: 'low', color: 'rgba(0,0,0,0.6)', action: 'SET_LOW' },\n            { name: 'med', color: 'rgba(0,0,0,0.4)', action: 'SET_MED' },\n            { name: 'high', color: 'rgba(0,0,0,0.2)', action: 'SET_HIGH' }\n        ],\n        activeLight: { name: 'off', color: 'rgba(0,0,0,1)' },\n        numberOfClicks: 0\n    }\n    console.log(state)\n    switch (action.type) {\n        case 'SET_OFF':\n            return {\n                ...state,\n                activeLight: intitialState.lightValues[0],\n                numberOfClicks: state.numberOfClicks += 1\n            };\n        case 'SET_LOW':\n            return {\n                ...state,\n                activeLight: intitialState.lightValues[1],\n                numberOfClicks: state.numberOfClicks += 1\n            };\n        case 'SET_MED':\n            return {\n                ...state,\n                activeLight: intitialState.lightValues[2],\n                numberOfClicks: state.numberOfClicks += 1\n            };\n        case 'SET_HIGH':\n            return {\n                ...state,\n                activeLight: intitialState.lightValues[3],\n                numberOfClicks: state.numberOfClicks += 1\n            };\n        case 'RESET':\n            return {\n                ...state,\n                activeLight: intitialState.lightValues[0],\n                numberOfClicks: state.numberOfClicks = 0\n            };\n        default:\n            return {\n                ...state,\n                activeLight: state.activeLight,\n                numberOfClicks: state.numberOfClicks\n            };\n    }\n}\n\nexport default lightReducer","import React, { useEffect } from \"react\";\nimport Controls from './Controls'\nimport Light from './Light'\nimport { createStore } from \"redux\"\nimport { Provider, useDispatch } from \"react-redux\"\nimport lightReducer from './reducers/lightReducer'\n\nlet intitialState = {\n    lightValues: [\n        { name: 'off', color: 'rgba(0,0,0,1)', action: 'SET_OFF' },\n        { name: 'low', color: 'rgba(0,0,0,0.6)', action: 'SET_LOW' },\n        { name: 'med', color: 'rgba(0,0,0,0.4)', action: 'SET_MED' },\n        { name: 'high', color: 'rgba(0,0,0,0.2)', action: 'SET_HIGH' }\n    ],\n    activeLight: { name: 'off', color: 'rgba(0,0,0,1)' },\n    numberOfClicks: 0\n}\n\nlet Storage = sessionStorage.getItem('lightlvl')\nconsole.log(Storage)\nif (Storage === null) {\n    console.log(\"init storage\")\n    sessionStorage.setItem('lightlvl', JSON.stringify({\n        activeLight: intitialState.lightValues[0],\n        numberOfClicks: 0\n    }))\n}\nStorage = sessionStorage.getItem('lightlvl')\nStorage = JSON.parse(Storage)\nconsole.log(Storage)\nconsole.log({activeLight: Storage.activeLight, numberOfClicks: Storage.numberOfClicks})\n//console.log(JSON.parse(Storage))\n//const [state, dispatch] = useReducer(lightReducer, intitialState)\n\nconst store = createStore(lightReducer, {activeLight: Storage.activeLight, numberOfClicks: Storage.numberOfClicks})\nconsole.log(store)\nconsole.log(store.getState())\n\nfunction App() {\n    //sessionStorage.setItem('test', 'hello world')\n    //console.log(sessionStorage.getItem('test'))\n    \n    console.log(store.getState())\n    \n\n    return (\n        <div className=\"App\">\n            <Provider store={store}>\n                <Controls\n                // clicks={state.numberOfClicks}\n                controls={intitialState.lightValues}\n                // dispatch={dispatch}\n                />\n                <Light\n                //color={state.activeLight.color} \n                />\n            </Provider>\n        </div>\n    );\n}\n\nexport default App","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './Components/App'\n\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}